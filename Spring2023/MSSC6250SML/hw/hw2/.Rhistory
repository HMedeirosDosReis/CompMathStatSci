beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0)
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s)
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas", col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas", col="green")
plot(1:1000, beta_1s, type="l", xlab="iteration", ylab="betas", col="red")
plot(1:1000, beta_2s, type="l", xlab="iteration", ylab="betas", col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas", col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.8, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(-2, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
n=100
x1 <- rnorm(n)
x2 <- rnorm(n)
eps <- rnorm(n)
y <- 2 + 4.2*x1 +2.4*x2 + eps
beta_1 <- 1
a1 <- y - beta_1 * x1
beta_2 <- lm(a1 ~ x2)$coef[2]
a2 <- y - beta_2 * x2
beta_1 <- lm(a2 ~ x1)$coef[2]
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(-2, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(-2.2, 1), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(-2.2, 2), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
n=100
x1 <- rnorm(n)
x2 <- rnorm(n)
eps <- rnorm(n)
y <- 2 + 4.2*x1 +2.4*x2 + eps
beta_1 <- 1
a1 <- y - beta_1 * x1
beta_2 <- lm(a1 ~ x2)$coef[2]
a2 <- y - beta_2 * x2
beta_1 <- lm(a2 ~ x1)$coef[2]
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:10)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:10, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:10, beta_1s, col="red")
lines(1:10, beta_2s, col="blue")
beta_1 <- 100
n=100
x1 <- rnorm(n)
x2 <- rnorm(n)
eps <- rnorm(n)
y <- 2 + 4.2*x1 +2.4*x2 + eps
beta_1 <- 100
a1 <- y - beta_1 * x1
beta_2 <- lm(a1 ~ x2)$coef[2]
a2 <- y - beta_2 * x2
beta_1 <- lm(a2 ~ x1)$coef[2]
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:10)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:10, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:10, beta_1s, col="red")
lines(1:10, beta_2s, col="blue")
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_1 <- 10000000000
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
beta_1 <- 10000
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame(simple_reg = c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), multiple_reg = as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
m_lin_model <- lm(Y~X1+X2)
m_lin_model <- lm(y~x1+x2)
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
abline(m_lin_model$coef[1], lty="dashed", lwd=3, col=rgb(0, 0, 0, alpha=0.4))
m_lin_model <- lm(y~x1+x2)
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
abline(h=m_lin_model$coef[1], lty="dashed", lwd=3, col=rgb(0, 0, 0, alpha=0.4))
abline(h=m_lin_model$coef[2], lty="dashed", lwd=3, col=rgb(0, 0, 0, alpha=0.4))
abline(h=m_lin_model$coef[3], lty="dashed", lwd=3, col=rgb(0, 0, 0, alpha=0.4))
legend('center', c("beta0","beta1","beta2", "multiple regression"), lty=c(1, 1, 1, 2), col=c("green","red","blue", "black"))
m_lin_model <- lm(y~x1+x2)
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
abline(h=m_lin_model$coef[1], lty="dashed", lwd=3, col="black")
abline(h=m_lin_model$coef[2], lty="dashed", lwd=3, col="black")
abline(h=m_lin_model$coef[3], lty="dashed", lwd=3, col="black")
m_lin_model <- lm(y~x1+x2)
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
abline(h=m_lin_model$coef[1], lty=2, lwd=3, col="black")
abline(h=m_lin_model$coef[2], lty="dashed", lwd=3, col="black")
abline(h=m_lin_model$coef[3], lty="dashed", lwd=3, col="black")
beta_0s[1:10]
beta_0s[1:19]
beta_0s[1:18]
beta_0s[1:18]
beta_1s[1:18]
beta_2s[1:18]
print(beta_0s[1:18])
print(beta_1s[1:18])
print(beta_2s[1:18])
print(beta_0s[1:15])
print(beta_1s[1:15])
print(beta_2s[1:15])
print(beta_0s[1:14])
print(beta_1s[1:14])
print(beta_2s[1:14])
beta_0s <- c()
beta_1s <- c()
beta_2s <- c()
# do the first time manually
a2 <- y - beta_1 * x1
beta_2s[1] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[1] <- lm_coef[2]
beta_0s[1] <- lm_coef[1]
for (i in 2:1000)
{
a2 <- y - beta_1s[i-1] * x1
beta_2s[i] <- lm(a2 ~ x2)$coef[2]
a1 <- y - beta_2s[i-1] * x2
lm_coef <- lm(a1 ~ x1)$coef
beta_1s[i] <- lm_coef[2]
beta_0s[i] <- lm_coef[1]
}
lm_coef <- lm(y ~ x1 + x2)$coefficients
lm_coef
data.frame( c(beta_0s[1000], beta_1s[1000], beta_2s[1000]), as.numeric(lm_coef))
plot(1:1000, beta_0s, type="l", xlab="iteration", ylab="betas",ylim=c(1.5, 4.5), col="green")
lines(1:1000, beta_1s, col="red")
lines(1:1000, beta_2s, col="blue")
y = [10,11,12,13,14,15,16]
x = [0.378,1.297,5.224,22.742,90.372,365.198,1468.724]
y = [10,11,12,13,14,15,16]
x = [0.378,1.297,5.224,22.742,90.372,365.198,1468.724]
l_model <- lm(y~3**x)
y = c(10,11,12,13,14,15,16)
l_model <- lm(y~3**x)
l_model <- lm(y~x)
x = c(0.378,1.297,5.224,22.742,90.372,365.198,1468.724)
l_model <- lm(y~x)
l_model <- lm(y~3**x)
l_model <- lm(y~3**x)
l_model <- lm(log(y)~x)
predict(l_model, 100)
l_model <- lm(x~y)
predict(l_model, 100)
